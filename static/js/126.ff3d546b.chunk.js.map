{"version":3,"file":"static/js/126.ff3d546b.chunk.js","mappings":"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","sources":["API/index.js","components/HomeFilmList/HomeFilmList.styled.jsx","components/HomeFilmList/HomeFilmList.jsx","components/Heder1/Heder1.styled.jsx","components/Heder1/Heder1.jsx","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '91ae85947dca7203ec2b4d7841a3c73b';\n\nexport const getTrendingFilms = async () => {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n\n  return results;\n};\n\nexport const getFilmById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const film = await response.json();\n\n  return film;\n};\n\nexport const getFilmByQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?query=${query}&api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n\n  return results;\n};\n\nexport const getActorsByFilmId = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { cast } = await response.json();\n\n  return cast;\n};\n\nexport const getReviewsByFilmId = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n  return results;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 8px;\n  justify-content: space-evenly;\n  padding: 0px;\n  list-style-type: none;\n`;\n\nexport const FilmListItem = styled.li`\n  font-size: 20px;\n`;\n\nexport const NavigationLink = styled(NavLink)`\n  text-decoration-line: none;\n  scale: 1;\n  &:hover {\n    scale: 1.05;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 0px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: #055371;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  FilmList,\n  FilmListItem,\n  NavigationLink,\n  MovieTitle,\n} from './HomeFilmList.styled';\n\nconst HomeFilmList = ({ trendingFilms }) => {\n  const location = useLocation();\n  return (\n    <FilmList>\n      {trendingFilms.map(({ original_title, id, poster_path }) => (\n        <NavigationLink to={`/movies/${id}`} state={{ from: location }}>\n          <FilmListItem key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${poster_path}`}\n              width=\"200\"\n              alt=\"poster\"\n            ></img>\n            <MovieTitle> {original_title}</MovieTitle>\n          </FilmListItem>\n        </NavigationLink>\n      ))}\n    </FilmList>\n  );\n};\n\nHomeFilmList.propTypes = {\n  trendingFilms: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n};\n\nexport default HomeFilmList;\n","import styled from '@emotion/styled';\n\nexport const Heder = styled.h1`\n  margin: 0px;\n  margin-bottom: 20px;\n  font-size: 35px;\n  color: #000000;\n  text-align: center;\n`;\n","import { Heder } from './Heder1.styled';\nconst Heder1 = ({ children }) => {\n  return <Heder>{children}</Heder>;\n};\n\nexport default Heder1;\n","import { useEffect, useState } from 'react';\nimport { getTrendingFilms } from '../API/index';\nimport Heder1 from '../components/Heder1';\nimport HomeFilmList from '../components/HomeFilmList';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const trendingFilms = await getTrendingFilms();\n\n        if (!trendingFilms) {\n          throw new Error('No matches found');\n        }\n\n        setTrendingFilms(trendingFilms);\n      } catch (errors) {\n        setError(errors.message);\n      }\n    };\n\n    fetchFilms();\n  }, []);\n\n  console.log(error);\n\n  return (\n    <>\n      <Heder1>Trending today</Heder1>\n      <HomeFilmList trendingFilms={trendingFilms} />\n    </>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingFilms","fetch","response","ok","Error","json","results","getFilmById","id","film","getFilmByQuery","query","getActorsByFilmId","cast","getReviewsByFilmId","FilmList","styled","FilmListItem","NavigationLink","NavLink","MovieTitle","trendingFilms","location","useLocation","map","original_title","poster_path","to","state","from","src","width","alt","Heder","children","useState","setTrendingFilms","error","setError","useEffect","fetchFilms","message","console","log","HomeFilmList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}