{"version":3,"file":"static/js/424.b3df4941.chunk.js","mappings":"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","sources":["API/index.js","components/HomeFilmList/HomeFilmList.styled.jsx","components/HomeFilmList/HomeFilmList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '91ae85947dca7203ec2b4d7841a3c73b';\n\nexport const getTrendingFilms = async () => {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n\n  return results;\n};\n\nexport const getFilmById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const film = await response.json();\n\n  return film;\n};\n\nexport const getFilmByQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?query=${query}&api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n\n  return results;\n};\n\nexport const getActorsByFilmId = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { cast } = await response.json();\n\n  return cast;\n};\n\nexport const getReviewsByFilmId = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n  return results;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 8px;\n  justify-content: space-evenly;\n  padding: 0px;\n  list-style-type: none;\n`;\n\nexport const FilmListItem = styled.li`\n  font-size: 20px;\n`;\n\nexport const NavigationLink = styled(NavLink)`\n  text-decoration-line: none;\n  scale: 1;\n  &:hover {\n    scale: 1.05;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 0px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: #055371;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  FilmList,\n  FilmListItem,\n  NavigationLink,\n  MovieTitle,\n} from './HomeFilmList.styled';\n\nconst HomeFilmList = ({ trendingFilms }) => {\n  const location = useLocation();\n  const defaultPoster =\n    'https://placehold.co/500x750?text=Poster+not+available';\n  return (\n    <FilmList>\n      {trendingFilms?.map(({ original_title, id, poster_path }) => (\n        <NavigationLink to={`/movies/${id}`} state={{ from: location }}>\n          <FilmListItem key={id}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/original${poster_path}`\n                  : defaultPoster\n              }\n              width=\"200\"\n              alt=\"poster\"\n            ></img>\n            <MovieTitle> {original_title}</MovieTitle>\n          </FilmListItem>\n        </NavigationLink>\n      ))}\n    </FilmList>\n  );\n};\n\nHomeFilmList.propTypes = {\n  trendingFilms: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n};\n\nexport default HomeFilmList;\n","import styled from '@emotion/styled';\n\nexport const InputContainer = styled.form`\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  outline: none;\n  margin-right: 10px;\n  width: 350px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  font-weight: 500;\n\n  text-decoration: none;\n\n  margin-right: 20px;\n  padding: 5px 16px;\n\n  border: 1px solid transparent;\n  border-radius: 5px;\n\n  color: black;\n  background-color: #2f788b;\n`;\n","import { useState } from 'react';\nimport { InputContainer, Input, Button } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ handleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const hendlChange = e => {\n    setQuery(e.target.value);\n  };\n  const resetForm = () => {\n    setQuery('');\n  };\n\n  const hendleSubmitForm = event => {\n    event.preventDefault();\n    handleSubmit(query);\n    resetForm();\n  };\n\n  console.log(query);\n\n  return (\n    <InputContainer onSubmit={hendleSubmitForm}>\n      <Input type=\"text\" value={query} onChange={hendlChange}></Input>\n      <Button type=\"submit\">Search</Button>\n    </InputContainer>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from '../components/SearchForm';\nimport { getFilmByQuery } from '../API/index';\nimport HomeFilmList from '../components/HomeFilmList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setFilms] = useState();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const handleSubmit = query => {\n    query ? setSearchParams({ query }) : setSearchParams({});\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      const response = await getFilmByQuery(searchQuery);\n      setFilms(response);\n    };\n    fetch();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} />\n      <HomeFilmList trendingFilms={films} />\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingFilms","fetch","response","ok","Error","json","results","getFilmById","id","film","getFilmByQuery","query","getActorsByFilmId","cast","getReviewsByFilmId","FilmList","styled","FilmListItem","NavigationLink","NavLink","MovieTitle","trendingFilms","location","useLocation","map","original_title","poster_path","to","state","from","src","width","alt","InputContainer","Input","Button","handleSubmit","useState","setQuery","console","log","onSubmit","event","preventDefault","type","value","onChange","e","target","useSearchParams","searchParams","setSearchParams","films","setFilms","searchQuery","get","useEffect","HomeFilmList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}