{"version":3,"file":"static/js/93.4f64b190.chunk.js","mappings":"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","sources":["API/index.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '91ae85947dca7203ec2b4d7841a3c73b';\n\nexport const getTrendingFilms = async () => {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n\n  return results;\n};\n\nexport const getFilmById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const film = await response.json();\n\n  return film;\n};\n\nexport const getFilmByQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?query=${query}&api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n\n  return results;\n};\n\nexport const getActorsByFilmId = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en - US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { cast } = await response.json();\n\n  return cast;\n};\n\nexport const getReviewsByFilmId = async id => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Ops .... ');\n  }\n  const { results } = await response.json();\n  return results;\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 8px;\n  justify-content: space-evenly;\n  padding: 0px;\n  list-style-type: none;\n`;\n\nexport const CastListItem = styled.li``;\nexport const CastName = styled.p`\n  margin: 0px;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`;\nexport const CastCharacter = styled.p`\n  margin: 0px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { getActorsByFilmId } from '../../API/index';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastName, CastCharacter } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const actors = await getActorsByFilmId(filmId);\n      setActors(actors);\n    };\n    fetch();\n  }, [filmId]);\n\n  const defaultPoster =\n    'https://placehold.co/500x750?text=Poster+not+available';\n  const isCast = actors.length;\n\n  return isCast > 0 ? (\n    <CastList>\n      {actors.map(({ profile_path, name, character, id }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/original${profile_path}`\n                : defaultPoster\n            }\n            alt=\"actor\"\n            width=\"200\"\n          ></img>\n\n          <CastName>{name}</CastName>\n          <CastCharacter>Character: {character}</CastCharacter>\n        </li>\n      ))}\n    </CastList>\n  ) : (\n    <p>Cast not found</p>\n  );\n};\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingFilms","fetch","response","ok","Error","json","results","getFilmById","id","film","getFilmByQuery","query","getActorsByFilmId","cast","getReviewsByFilmId","CastList","styled","CastName","CastCharacter","useState","actors","setActors","filmId","useParams","useEffect","length","map","profile_path","name","character","src","alt","width","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}